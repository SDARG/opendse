package net.sf.opendse.encoding.routing;

import java.util.Set;

import org.opt4j.satdecoding.Constraint;

import net.sf.opendse.encoding.MappingEncoding;
import net.sf.opendse.encoding.variables.MappingVariable;
import net.sf.opendse.model.Architecture;
import net.sf.opendse.model.Link;
import net.sf.opendse.model.Resource;

/**
 * The {@link CommunicationFlowRoutingEncoder} formulates the constraints
 * encoding a valid routing of the given {@link CommunicationFlow}.
 * 
 * @author Fedor Smirnov
 *
 */
public interface CommunicationFlowRoutingEncoder {

	/**
	 * Formulates the constraints encoding a valid routing of the given
	 * {@link CommunicationFlow}.
	 * 
	 * @param communicationFlow
	 *            the {@link CommunicationFlow} that shall be routed
	 * @param routing
	 *            the {@link Architecture} describing the routing possibilities of
	 *            the communication of the {@link CommunicationFlow}
	 * @param mappingVariables
	 *            the {@link Set} of {@link MappingVariable}s generated by the
	 *            {@link MappingEncoding}
	 * @return a set of {@link Constraint} encoding the valid routing of the
	 *         {@link CommunicationFlow}
	 */
	public Set<Constraint> toConstraints(CommunicationFlow communicationFlow, Architecture<Resource, Link> routing,
			Set<MappingVariable> mappingVariables);
}
